'''
@author:lvming
@time:2021/6/27
'''
'''
POM：
   关键字驱动设计模式，是所有测试框架的核心底层
   目前市场主流的测试框架设计模块分为两种：
	1.关键字驱动，一般用于接口自动化测试，和部分UI自动化，一般是在多个系统要执行自动化测试时，应用这种模式。在不同系统中，都要写很多重复性的代码。
	2.POM，页面对象模型，用与专门针对一个系统执行自动化测试实现的设计模式。可以最大程度实现测试的覆盖率。也是目前行业内最佳的设计模式。
	POM，PageObject Module，页面对象模型，PO是专门以页面作为自动化测试的执行对象，来实现整体自动化测试的。
POM只用于UI自动化。
	例如：
	   添加购物车：
	   输入url，点击登录，输入账号，输入密码，点击登录按钮，搜索商品，选择商品，选择商品属性，点击加入购物车。
	   POM：
	   进入登录页，执行登录操作
	   进入商品详情页，执行添加商品到购物车操作
	   进入购物车页面，执行校验添加是否成功操作
	   完全基于业务流程，以及页面来实现的自动化测试
	   系统所有的页面，都是基于url来进行定位的，每一个页面都有一个对应的url
	   基于页面来实现页面中的流程
	   POM中，基于系统本身定义不同的页面对象，来实现不同页面的一个或者多个流程。再基于多个页面对象的拼接，实现一个完整的系统业务流程，相较于关键字驱动而言，会更加适用于系统本身流程测试
POM实现：
   1.工程结构（不包含常规的配置、UnitTest等类）
	代码与数据进行分离，逻辑代码与测试代码的分离
	基类：关键字驱动类的POM设计形变
	页面对象类：提取系统中关键的页面，封装成页面对象，便于测试执行
	   页面类：封装页面的操作行为
	   页面数据类：封装页面的元素及属性
	测试用例类：测试代码的实现
	测试数据类：管理测试数据
   2.请上源码
   3.POM的覆盖率高还是取决于你的页面对象的设计
   4.自动化测试是否能够执行取决于你的收益和产出成本比
'''
# 课后作业：
# 1.将原有的自动化流程，基于POM体系来实现
# 2.将url进行配置设置
# 3.提取所有的元素信息，进行第五层级的分类。
#    但凡要提取，请记得你提取的元素都是常量（大写）。